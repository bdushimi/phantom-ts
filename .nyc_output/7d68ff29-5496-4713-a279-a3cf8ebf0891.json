{"/Users/bernarddushimimana/node-projects/phantom-typescript/src/server.ts":{"path":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/server.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":47}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":63}},"5":{"start":{"line":7,"column":25},"end":{"line":7,"column":64}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":72}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":40}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":64}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":32}},"11":{"start":{"line":17,"column":31},"end":{"line":17,"column":68}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":47}},"13":{"start":{"line":21,"column":8},"end":{"line":23,"column":11}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":72}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":15,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":23},"end":{"line":19,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":16},"end":{"line":24,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":30},"end":{"line":21,"column":31}},"loc":{"start":{"line":21,"column":36},"end":{"line":23,"column":9}},"line":21}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1},"f":{"0":1,"1":1,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/server.ts","sources":["/Users/bernarddushimimana/node-projects/phantom-typescript/src/server.ts"],"names":[],"mappings":";;;AAAA,4CAA2C;AAC3C,gDAA6C;AAC7C,gEAA0C;AAC1C,iEAA8D;AAE9D,MAAM,aAAc,SAAQ,aAAM;IAGhC;QACE,KAAK,CAAC,IAAI,CAAC,CAAC;QAHG,yBAAoB,GAAG,mCAAmC,CAAC;QAI1E,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAEO,gBAAgB;QACtB,MAAM,cAAc,GAAG,IAAI,+BAAc,EAAE,CAAC;QAC5C,KAAK,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACzC,CAAC;IAEM,KAAK,CAAC,IAAY;QACvB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YACzB,eAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,oBAAoB,IAAI,IAAI,EAAE,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,kBAAe,IAAI,aAAa,EAAE,CAAC,GAAG,CAAC","sourcesContent":["import { Server } from '@overnightjs/core';\nimport { Logger } from '@overnightjs/logger';\nimport * as bodyParser from 'body-parser';\nimport { RoleController } from './controllers/RoleController';\n\nclass PhantomServer extends Server {\n  private readonly SERVER_START_MESSAGE = 'Phantom server started on port : ';\n\n  constructor() {\n    super(true);\n    this.app.use(bodyParser.json());\n    this.app.use(bodyParser.urlencoded({ extended: true }));\n    this.setupControllers();\n  }\n\n  private setupControllers(): void {\n    const roleController = new RoleController();\n    super.addControllers([roleController]);\n  }\n\n  public start(port: number): void {\n    this.app.listen(port, () => {\n      Logger.Imp(`${this.SERVER_START_MESSAGE} ${port}`);\n    });\n  }\n}\n\nexport default new PhantomServer().app;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb3a1a3e81573e54cc9f9e0ba1274bcbbcaaa5e3","contentHash":"491523066e5729b207a3c49a96e7ce7d2f8ccf2a99dcb6a06715f223606b811d"},"/Users/bernarddushimimana/node-projects/phantom-typescript/src/controllers/RoleController.ts":{"path":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/controllers/RoleController.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":28},"end":{"line":5,"column":56}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":24},"end":{"line":7,"column":51}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":40}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":47}},"8":{"start":{"line":10,"column":21},"end":{"line":39,"column":1}},"9":{"start":{"line":12,"column":8},"end":{"line":26,"column":11}},"10":{"start":{"line":13,"column":34},"end":{"line":22,"column":10}},"11":{"start":{"line":14,"column":29},"end":{"line":14,"column":37}},"12":{"start":{"line":15,"column":29},"end":{"line":15,"column":37}},"13":{"start":{"line":16,"column":25},"end":{"line":16,"column":42}},"14":{"start":{"line":17,"column":12},"end":{"line":17,"column":29}},"15":{"start":{"line":18,"column":12},"end":{"line":18,"column":48}},"16":{"start":{"line":19,"column":12},"end":{"line":21,"column":80}},"17":{"start":{"line":24,"column":12},"end":{"line":24,"column":39}},"18":{"start":{"line":25,"column":12},"end":{"line":25,"column":78}},"19":{"start":{"line":29,"column":8},"end":{"line":37,"column":11}},"20":{"start":{"line":30,"column":34},"end":{"line":33,"column":10}},"21":{"start":{"line":31,"column":26},"end":{"line":31,"column":68}},"22":{"start":{"line":32,"column":12},"end":{"line":32,"column":63}},"23":{"start":{"line":35,"column":12},"end":{"line":35,"column":39}},"24":{"start":{"line":36,"column":12},"end":{"line":36,"column":78}},"25":{"start":{"line":40,"column":0},"end":{"line":45,"column":46}},"26":{"start":{"line":46,"column":0},"end":{"line":51,"column":50}},"27":{"start":{"line":52,"column":0},"end":{"line":54,"column":19}},"28":{"start":{"line":55,"column":0},"end":{"line":55,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":22},"end":{"line":27,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":18},"end":{"line":13,"column":19}},"loc":{"start":{"line":13,"column":34},"end":{"line":22,"column":10}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":74},"end":{"line":13,"column":75}},"loc":{"start":{"line":13,"column":87},"end":{"line":22,"column":9}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":19},"end":{"line":23,"column":20}},"loc":{"start":{"line":23,"column":30},"end":{"line":26,"column":9}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":26},"end":{"line":38,"column":5}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":18},"end":{"line":30,"column":19}},"loc":{"start":{"line":30,"column":34},"end":{"line":33,"column":10}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":74},"end":{"line":30,"column":75}},"loc":{"start":{"line":30,"column":87},"end":{"line":33,"column":9}},"line":30},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":19},"end":{"line":34,"column":20}},"loc":{"start":{"line":34,"column":30},"end":{"line":37,"column":9}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/controllers/RoleController.ts","sources":["/Users/bernarddushimimana/node-projects/phantom-typescript/src/controllers/RoleController.ts"],"names":[],"mappings":";;;;AACA,yDAA8D;AAC9D,4CAA0D;AAC1D,oDAAgD;AAChD,yCAAsC;AAEtC,gDAA6C;AAG7C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEzB,OAAO,CAAC,GAAY,EAAE,GAAa;QACjC,4BAAY;aACT,IAAI,CAAC,CAAO,UAAU,EAAE,EAAE;YACzB,MAAM,QAAQ,GAAU,GAAG,CAAC,IAAa,CAAC;YAC1C,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC;YAC1B,MAAM,IAAI,GAAG,IAAI,WAAI,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,MAAM,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACpC,GAAG;iBACA,MAAM,CAAC,sBAAE,CAAC;iBACV,IAAI,CAAC,EAAE,OAAO,EAAE,YAAY,IAAI,CAAC,IAAI,sBAAsB,EAAE,CAAC,CAAC;QACpE,CAAC,CAAA,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,eAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAClB,GAAG,CAAC,MAAM,CAAC,yCAAqB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,WAAW,CAAC,GAAY,EAAE,GAAa;QACrC,4BAAY;aACT,IAAI,CAAC,CAAO,UAAU,EAAE,EAAE;YACzB,MAAM,KAAK,GAAW,MAAM,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,WAAI,CAAC,CAAC;YAC1D,GAAG,CAAC,MAAM,CAAC,sBAAE,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QACjC,CAAC,CAAA,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,eAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAClB,GAAG,CAAC,MAAM,CAAC,yCAAqB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;CACF,CAAA;AA9BC;IADC,WAAI,CAAC,OAAO,CAAC;;;;6CAiBb;AAGD;IADC,UAAG,CAAC,OAAO,CAAC;;;;iDAWZ;AA/BU,cAAc;IAD1B,iBAAU,CAAC,MAAM,CAAC;GACN,cAAc,CAgC1B;AAhCY,wCAAc","sourcesContent":["import { Request, Response } from 'express';\nimport { OK, INTERNAL_SERVER_ERROR } from 'http-status-codes';\nimport { Controller, Post, Get } from '@overnightjs/core';\nimport { dbConnection } from '../db-connection';\nimport { Role } from '../entity/Role';\nimport IRole from '../interfaces/Role';\nimport { Logger } from '@overnightjs/logger';\n\n@Controller('api/')\nexport class RoleController {\n  @Post('roles')\n  addRole(req: Request, res: Response): any {\n    dbConnection\n      .then(async (connection) => {\n        const roleBody: IRole = req.body as IRole;\n        const { name } = roleBody;\n        const role = new Role();\n        role.name = name;\n        await connection.manager.save(role);\n        res\n          .status(OK)\n          .json({ message: `New Role ${role.name} Successfully Saved.` });\n      })\n      .catch((error) => {\n        Logger.Err(error);\n        res.status(INTERNAL_SERVER_ERROR).json(error);\n      });\n  }\n\n  @Get('roles')\n  getAllRoles(req: Request, res: Response): any {\n    dbConnection\n      .then(async (connection) => {\n        const roles: Role[] = await connection.manager.find(Role);\n        res.status(OK).json({ roles });\n      })\n      .catch((error) => {\n        Logger.Err(error);\n        res.status(INTERNAL_SERVER_ERROR).json(error);\n      });\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"970e22b426dbf8337930543a789a084311b40c83","contentHash":"cf2ac9ef837718760ad03e699160e8c346b34d4876331be6f7df1764c0088b5b"},"/Users/bernarddushimimana/node-projects/phantom-typescript/src/db-connection.ts":{"path":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/db-connection.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":64}},"6":{"start":{"line":8,"column":0},"end":{"line":25,"column":3}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/db-connection.ts","sources":["/Users/bernarddushimimana/node-projects/phantom-typescript/src/db-connection.ts"],"names":[],"mappings":";;;;AAAA,4BAA0B;AAC1B,qCAA2C;AAC3C,iEAAiC;AAEpB,QAAA,YAAY,GAAG,0BAAgB,CAAC;IAC3C,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,WAAW;IACjB,IAAI,EAAE,IAAI;IACV,QAAQ,EAAE,WAAW;IACrB,QAAQ,EAAE,eAAe;IACzB,QAAQ,EAAE,aAAa;IACvB,WAAW,EAAE,IAAI;IACjB,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,CAAC,cAAI,CAAC;IAChB,UAAU,EAAE,CAAC,uBAAuB,CAAC;IACrC,WAAW,EAAE,CAAC,wBAAwB,CAAC;IACvC,GAAG,EAAE;QACH,WAAW,EAAE,YAAY;QACzB,aAAa,EAAE,eAAe;QAC9B,cAAc,EAAE,gBAAgB;KACjC;CACF,CAAC,CAAC","sourcesContent":["import 'reflect-metadata';\nimport { createConnection } from 'typeorm';\nimport Role from './entity/Role';\n\nexport const dbConnection = createConnection({\n  type: 'postgres',\n  host: 'localhost',\n  port: 5432,\n  username: 'developer',\n  password: 'developer@123',\n  database: 'Phantom-dev',\n  synchronize: true,\n  logging: false,\n  entities: [Role],\n  migrations: ['src/migration/**/*.ts'],\n  subscribers: ['src/subscriber/**/*.ts'],\n  cli: {\n    entitiesDir: 'src/entity',\n    migrationsDir: 'src/migration',\n    subscribersDir: 'src/subscriber',\n  },\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c7029b828f8d54d4fb13df4aa5932a386a7dca98","contentHash":"f2c507bf4fcf9c3dceb0f82a7431fe6bb2c7b6c71ee4f05718c62d5603a3fa48"},"/Users/bernarddushimimana/node-projects/phantom-typescript/src/entity/Role.ts":{"path":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/entity/Role.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":32}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":36}},"4":{"start":{"line":6,"column":11},"end":{"line":7,"column":1}},"5":{"start":{"line":8,"column":0},"end":{"line":11,"column":33}},"6":{"start":{"line":12,"column":0},"end":{"line":15,"column":35}},"7":{"start":{"line":16,"column":0},"end":{"line":18,"column":9}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":20}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bernarddushimimana/node-projects/phantom-typescript/src/entity/Role.ts","sources":["/Users/bernarddushimimana/node-projects/phantom-typescript/src/entity/Role.ts"],"names":[],"mappings":";;;;AAAA,qCAAwE;AAGxE,IAAa,IAAI,GAAjB,MAAa,IAAI;CAMhB,CAAA;AAJC;IADC,gCAAsB,EAAE;;gCACb;AAGZ;IADC,uBAAa,EAAE;;kCACF;AALH,IAAI;IADhB,gBAAM,EAAE;GACI,IAAI,CAMhB;AANY,oBAAI;AAQjB,kBAAe,IAAI,CAAC","sourcesContent":["import { Entity, PrimaryGeneratedColumn, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @PrimaryColumn()\n  name!: string;\n}\n\nexport default Role;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"97e47c49a487cf566577abd1de71f557440567e4","contentHash":"443fe821b47f568930ae6047306b09d59cdfb4f5841b36762d4c72990bfda9b1"}}